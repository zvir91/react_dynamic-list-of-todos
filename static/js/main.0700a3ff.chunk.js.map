{"version":3,"sources":["api.ts","components/TodoContext.tsx","components/TodoList/TodoElement.tsx","components/Loader/Loader.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["get","url","fullURL","delay","Promise","resolve","setTimeout","then","fetch","res","json","TodoContext","React","createContext","selectedTodo","setSelectedTodo","todos","setTodos","loader","setLoader","query","setQuery","selectedUser","setSelectedUser","selectedSelect","setSelect","TodoProvider","_ref","children","useState","useEffect","userId","result","finally","concat","response","value","useMemo","_jsx","Provider","TodoElement","todo","useContext","isSelectedTodo","id","_jsxs","className","cn","completed","title","type","onClick","iconCompleted","Loader","TodoList","filteredTodos","allTodos","filter","toLowerCase","includes","active","map","TodoFilter","onChange","event","currentTarget","placeholder","style","pointerEvents","TodoModal","href","email","name","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0700a3ff.chunk.js","sourcesContent":["import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useMemo, useState } from 'react';\nimport { Todo } from '../types/Todo';\nimport { User } from '../types/User';\nimport { getTodos, getUser } from '../api';\n// import { Todo } from '../types/Todo';\ntype Prop = {\n  selectedTodo: Todo | null,\n  setSelectedTodo: (isSelected: Todo | null) => void,\n  todos: Todo[],\n  setTodos: (todos: Todo[]) => void,\n  loader: boolean,\n  setLoader: (loader: boolean) => void,\n  query: string,\n  setQuery: (query: string) => void,\n  selectedUser: User | null,\n  setSelectedUser: (selectedUser: User) => void,\n  selectedSelect: string,\n  setSelect: (selectedSelect: string) => void,\n};\n\nexport const TodoContext = React.createContext<Prop>({\n  selectedTodo: null,\n  setSelectedTodo: () => {},\n  todos: [],\n  setTodos: () => {},\n  loader: false,\n  setLoader: () => {},\n  query: '',\n  setQuery: () => {},\n  selectedUser: null,\n  setSelectedUser: () => {},\n  selectedSelect: '',\n  setSelect: () => {},\n});\n\ntype Props = {\n  children: React.ReactNode\n};\n\nexport const TodoProvider: React.FC<Props> = ({ children }) => {\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [loader, setLoader] = useState(false);\n  const [query, setQuery] = useState('');\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n  const [selectedSelect, setSelect] = useState('');\n\n  useEffect(() => {\n    setLoader(true);\n    getTodos()\n      .then((result => {\n        setTodos(result);\n      }))\n      .finally(() => {\n        setLoader(false);\n      });\n    if (selectedTodo) {\n      setLoader(true);\n      getUser(selectedTodo.userId)\n        .then((response => {\n          setSelectedUser(response);\n        }))\n        .finally(() => {\n          setLoader(false);\n        });\n    }\n  }, [selectedTodo]);\n\n  const value = useMemo(() => ({\n    selectedTodo,\n    setSelectedTodo,\n    todos,\n    setTodos,\n    loader,\n    setLoader,\n    query,\n    setQuery,\n    selectedUser,\n    setSelectedUser,\n    selectedSelect,\n    setSelect,\n  }\n  ), [loader, query, selectedSelect, selectedTodo,\n    selectedUser, todos]);\n\n  return (\n    <TodoContext.Provider value={value}>\n      {children}\n    </TodoContext.Provider>\n  );\n};\n","// eslint-disable-next-line import/no-cycle\nimport { useContext } from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { TodoContext } from '../TodoContext';\n\ninterface TodoElementProps {\n  todo: Todo;\n}\n\nexport const TodoElement:React.FC<TodoElementProps> = ({ todo }) => {\n  const { selectedTodo, setSelectedTodo } = useContext(TodoContext);\n\n  const isSelectedTodo = selectedTodo?.id === todo.id;\n\n  return (\n    <tr data-cy=\"todo\" className=\"\">\n      <td className=\"is-vcentered\">{todo.id}</td>\n      <td className=\"is-vcentered\">\n        <i className={cn('', { 'fas fa-check': todo.completed })} />\n      </td>\n      <td className=\"is-vcentered is-expanded\">\n        <p className={cn('', {\n          'has-text-success': todo.completed,\n          'has-text-danger': !todo.completed,\n        })}\n        >\n          {todo.title}\n        </p>\n      </td>\n      <td className=\"has-text-right is-vcentered\">\n        <button\n          data-cy=\"selectButton\"\n          className=\"button\"\n          type=\"button\"\n          onClick={() => {\n            setSelectedTodo(todo);\n          }}\n        >\n          <span\n            className=\"icon\"\n            data-cy={cn('', { iconCompleted: todo.completed })}\n          >\n            <i className={cn('far',\n              {\n                'fa-eye-slash': isSelectedTodo,\n                'fa-eye': !isSelectedTodo,\n              })}\n            />\n          </span>\n        </button>\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => {\n  return (\n    <div className=\"Loader\" data-cy=\"loader\">\n      <div className=\"Loader__content\" />\n    </div>\n  );\n};\n","import React, { useContext } from 'react';\nimport { TodoElement } from './TodoElement';\nimport { TodoContext } from '../TodoContext';\nimport { Loader } from '../Loader';\n\nexport const TodoList: React.FC = () => {\n  const {\n    todos, query, selectedSelect, loader,\n  } = useContext(TodoContext);\n\n  const filteredTodos = () => {\n    const allTodos = todos.filter(\n      todo => todo.title.toLowerCase().includes(query.toLowerCase()),\n    );\n    const completed = allTodos.filter(todo => todo.completed === true);\n    const active = allTodos.filter(todo => !todo.completed);\n\n    if (selectedSelect === 'active') {\n      return active;\n    }\n\n    if (selectedSelect === 'completed') {\n      return completed;\n    }\n\n    return allTodos;\n  };\n\n  return (\n    loader ? <Loader />\n      : (\n        <table className=\"table is-narrow is-fullwidth\">\n          <thead>\n            <tr>\n              <th>#</th>\n              <th>\n                <span className=\"icon\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              </th>\n              <th>Title</th>\n              <th> </th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {filteredTodos().map(todo => (\n              <TodoElement\n                todo={todo}\n                key={todo.id}\n              />\n            ))}\n          </tbody>\n        </table>\n      )\n  );\n};\n","import { useContext } from 'react';\nimport { TodoContext } from '../TodoContext';\n\nexport const TodoFilter:React.FC = () => {\n  const {\n    setSelect,\n    setQuery,\n    query,\n  } = useContext(TodoContext);\n\n  const handleQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.currentTarget.value);\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={(event) => {\n              setSelect(event.currentTarget.value);\n            }}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleQuery}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => {\n                setQuery('');\n              }}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import { useContext } from 'react';\nimport { Loader } from '../Loader';\nimport { TodoContext } from '../TodoContext';\n\nexport const TodoModal: React.FC = () => {\n  const {\n    selectedTodo, setSelectedTodo, selectedUser, loader,\n  } = useContext(TodoContext);\n\n  return (\n    loader\n      ? <Loader />\n      : (selectedTodo) && (\n        <div className=\"modal is-active\" data-cy=\"modal\">\n          <div className=\"modal-background\" />\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                {`Todo #${selectedTodo?.id}`}\n              </div>\n\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                type=\"button\"\n                className=\"delete\"\n                data-cy=\"modal-close\"\n                onClick={() => {\n                  setSelectedTodo(null);\n                }}\n              />\n            </header>\n            <div className=\"modal-card-body\">\n              <p className=\"block\" data-cy=\"modal-title\">\n                {selectedTodo?.title}\n              </p>\n\n              <p className=\"block\" data-cy=\"modal-user\">\n                {selectedTodo?.completed\n                  ? <strong className=\"has-text-success\">Done</strong>\n                  : <strong className=\"has-text-danger\">Planned</strong>}\n                {' by '}\n\n                <a href={`mailto:${selectedUser?.email}`}>\n                  {selectedUser?.name}\n                </a>\n              </p>\n            </div>\n          </div>\n        </div>\n      )\n  );\n};\n","/* eslint-disable max-len */\nimport React from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { TodoProvider } from './components/TodoContext';\n\nexport const App: React.FC = () => {\n  return (\n    <TodoProvider>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              <TodoList />\n            </div>\n          </div>\n        </div>\n      </div>\n      <TodoModal />\n    </TodoProvider>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}